{
  "permissions": {
    "allow": [
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(gh auth:*)",
      "Bash(where gh)",
      "Read(//c/Users/Elize/Downloads/**)",
      "Bash(npm run type-check:*)",
      "Bash(npm run build:*)",
      "Bash(npm install:*)",
      "Bash(git reset:*)",
      "Bash(npx supabase db pull:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(git restore:*)",
      "Bash(psql:*)",
      "Bash(git log:*)",
      "Bash(npx supabase link:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(tree:*)",
      "Bash(npm run test:run:*)",
      "Bash(npm run test:coverage:*)",
      "Bash(aws:*)",
      "Bash(cdk:*)",
      "Bash(npx cdk:*)",
      "Bash(npx supabase:*)",
      "Bash(export SUPABASE_ACCESS_TOKEN=sbp_7dab8310a749b81bcdd743d41dab744d22822569)",
      "Bash(echo \"CREATE EXTENSION IF NOT EXISTS \"\"uuid-ossp\"\";\")",
      "Bash(printf \"y\\n\")",
      "Bash(for i in {1..10})",
      "Bash(do echo \"Attempt $i...\")",
      "Bash(done)",
      "Bash(for:*)",
      "Bash(do echo \"Processing $file...\")",
      "Bash(timeout 30 npx supabase db push --dry-run)",
      "Bash(timeout 180 npx supabase db push)",
      "Bash(timeout 30 npx supabase migration list --linked)",
      "Bash(timeout 60 npx supabase db push --dry-run)",
      "Bash(curl:*)",
      "Bash(export PGPASSWORD=\"ROInARVcjyQQZvqMqNgJ1835qzenNNxQ\")",
      "Bash(where psql)",
      "Bash(node:*)",
      "Bash(ren:*)",
      "Bash(timeout 60 bash -c 'while true; do curl -s -X POST \"\"https://ljxzdzgvytkazjrsafte.supabase.co/functions/v1/apply-migrations-to-aurora\"\" -H \"\"Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxqeHpkemd2eXRrYXpqcnNhZnRlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjAyMzIyNzQsImV4cCI6MjA3NTgwODI3NH0.RY_3-9x2Cdp4_5AExnwxaxh-Z0EC0kpnZ5Moxvm6AMg\"\" -H \"\"Content-Type: application/json\"\" && break || sleep 5; done')",
      "Bash(npm init:*)",
      "Bash(timeout:*)",
      "Bash(taskkill:*)",
      "Bash(break)",
      "Bash(npm run dev:*)",
      "Bash(powershell:*)",
      "Bash(dir:*)",
      "Bash(Select-String -Pattern \"Applying:|SUCCESS|SKIPPED|FAILED|Summary:\")",
      "Bash(do sed -i \"s/process\\.env\\.AWS_REGION || ''us-east-1''/''us-east-1''/g\" \"$file\")",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(tee:*)",
      "Bash(do echo \"Updating $func...\")"
    ],
    "deny": [],
    "ask": []
  }
}
